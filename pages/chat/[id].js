import Head from "next/head";
import styled from "styled-components";
import ChatScreen from "../../components/ChatScreen";
import { auth, db } from "../../firebaseCon";
import Sidebar from "../../components/Sidebar";
import { useAuthState } from "react-firebase-hooks/auth";
import getRecipientEmail from "../../utilities/getRecipientEmail";

const Container = styled.div`
  color: white;
  display: flex;
  background-color: #212e36;
`;

const ChatContainer = styled.div`
  flex: 1;
  overflow: scroll;
  height: 100vh;
  ::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none;
  scrollbar-width: none;
`;

function Chatroom({ chat, messages }) {
  const [user] = useAuthState(auth);

  return (
    <Container>
      <Head>
        <title>Chat with {getRecipientEmail(chat.users, user)}</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://www.freepnglogos.com/uploads/whatsapp-logo-app-png-4.png"
        />
      </Head>
      <Sidebar />
      <ChatContainer>
        <ChatScreen chat={chat} messages={messages} />
      </ChatContainer>
    </Container>
  );
}

export default Chatroom;

//* Servier Side Scripting with this function. this function is rendered on the server before the actual page loads on the browser
export async function getServerSideProps(context) {
  //todo we are getting the id's of the users that are in the chat
  const ref = db.collection("chats").doc(context.query.id);

  //todo here we are basicallly getting all the messages according to the timestamp
  const messagesRef = await ref
    .collection("messages")
    .orderBy("timestamp", "asc")
    .get();

  //todo here we get the data of message from above and we are going to prepare it as we want to show on the client side
  const messages = messagesRef.docs
    .map((doc) => ({
      id: doc.id,
      ...doc.data(),
    }))
    .map((m) => ({
      ...m,
      timestamp: m.timestamp.toDate().getTime(),
    }));

  //todo here we are preparing our chat information
  const chatRef = await ref.get();
  const chat = {
    id: chatRef.id,
    ...chatRef.data(),
  };

  return {
    props: {
      messages: JSON.stringify(messages),
      chat: chat,
    },
  };
}

// !note :::::: when we send the timestamp from the server side to client side then it looses its datatype
